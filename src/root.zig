pub const Parser = @import("core/parser.zig").Parser;
pub const ParserError = @import("core/parser.zig").ParserError;
pub const ParseReport = @import("core/parser.zig").ParseReport;
pub const Tree = @import("core/tree.zig").Tree;
pub const Node = @import("core/node.zig").Node;
pub const Point = @import("core/node.zig").Point;
pub const Language = @import("language.zig").Language;
pub const LanguageError = @import("language.zig").LanguageError;
pub const Languages = @import("languages.zig").Bundled;
pub const LanguageRegistry = @import("languages.zig").Registry;
pub const LanguageLoadError = @import("languages.zig").DynamicLoadError;
pub const Query = @import("core/query.zig").Query;
pub const QueryCursor = @import("core/query.zig").QueryCursor;
pub const QueryError = @import("core/query.zig").QueryError;
pub const QueryCapture = @import("core/query.zig").Capture;
pub const QueryValidation = @import("core/query.zig").ValidationResult;
pub const validateQuery = @import("core/query.zig").validateQuery;
pub const validateQueryFile = @import("core/query.zig").validateQueryFile;
pub const Highlight = @import("editor/highlight.zig");
pub const Editor = @import("editor.zig");
pub const GrimBridge = Editor.GrimBridge;
pub const QueryRegistry = Editor.QueryRegistry;
pub const EditorServices = Editor.EditorServices;
pub const ParserPool = @import("core/pool.zig").ParserPool;
pub const ParserLease = @import("core/pool.zig").Lease;
pub const Semantic = @import("semantic.zig");
pub const LSP = @import("lsp.zig");
pub const EditBuilder = @import("core/edit.zig").EditBuilder;
pub const InputEdit = @import("core/edit.zig").InputEdit;
pub const SyntaxError = @import("core/errors.zig").SyntaxError;
pub const getSyntaxErrors = @import("core/errors.zig").getSyntaxErrors;
pub const Injection = @import("core/injections.zig").Injection;
pub const InjectionResult = @import("core/injections.zig").InjectionResult;
pub const parseWithInjections = @import("core/injections.zig").parseWithInjections;
pub const findInjections = @import("core/injections.zig").findInjections;
pub const c = @import("c/tree_sitter.zig").c;
